/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  10143: {
    CultRewards: {
      address: "0x4A73801ff8946d51c4EEef9a1b7B1CB7320A4c9F",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "WITHDRAW_TYPEHASH",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "deposit",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "reason",
              type: "bytes4",
              internalType: "bytes4",
            },
            {
              name: "comment",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "depositBatch",
          inputs: [
            {
              name: "recipients",
              type: "address[]",
              internalType: "address[]",
            },
            {
              name: "amounts",
              type: "uint256[]",
              internalType: "uint256[]",
            },
            {
              name: "reasons",
              type: "bytes4[]",
              internalType: "bytes4[]",
            },
            {
              name: "comment",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "eip712Domain",
          inputs: [],
          outputs: [
            {
              name: "fields",
              type: "bytes1",
              internalType: "bytes1",
            },
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "version",
              type: "string",
              internalType: "string",
            },
            {
              name: "chainId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "verifyingContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "salt",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "extensions",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "nonces",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawFor",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawWithSig",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "v",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "r",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "s",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Deposit",
          inputs: [
            {
              name: "depositor",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "reason",
              type: "bytes4",
              indexed: false,
              internalType: "bytes4",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "comment",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "EIP712DomainChanged",
          inputs: [],
          anonymous: false,
        },
        {
          type: "event",
          name: "Withdraw",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ADDRESS_ZERO",
          inputs: [],
        },
        {
          type: "error",
          name: "ARRAY_LENGTH_MISMATCH",
          inputs: [],
        },
        {
          type: "error",
          name: "INVALID_DEPOSIT",
          inputs: [],
        },
        {
          type: "error",
          name: "INVALID_SIGNATURE",
          inputs: [],
        },
        {
          type: "error",
          name: "INVALID_WITHDRAW",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidShortString",
          inputs: [],
        },
        {
          type: "error",
          name: "SIGNATURE_DEADLINE_EXPIRED",
          inputs: [],
        },
        {
          type: "error",
          name: "StringTooLong",
          inputs: [
            {
              name: "str",
              type: "string",
              internalType: "string",
            },
          ],
        },
        {
          type: "error",
          name: "TRANSFER_FAILED",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "",
      deploymentScript: "deploy.js",
      constructorArgs: [],
      verified: false,
    },
    BondingCurve: {
      address: "0xb6598267ac7A0687675F46250a884Ef04A89B7a7",
      abi: [
        {
          type: "function",
          name: "A",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "B",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getEthBuyQuote",
          inputs: [
            {
              name: "currentSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "ethOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getEthSellQuote",
          inputs: [
            {
              name: "currentSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "ethOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getTokenBuyQuote",
          inputs: [
            {
              name: "currentSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "tokenOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getTokenSellQuote",
          inputs: [
            {
              name: "currentSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "tokensToSell",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "error",
          name: "InsufficientLiquidity",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "",
      deploymentScript: "deploy.js",
      constructorArgs: [],
      verified: false,
    },
    AirdropContract: {
      address: "0x59e888a72782AC7c0BB4236D43c0e82C880997fB",
      abi: [
        {
          type: "function",
          name: "BASIS_POINTS",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "canClaim",
          inputs: [
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "percentage",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "merkleProof",
              type: "bytes32[]",
              internalType: "bytes32[]",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "claim",
          inputs: [
            {
              name: "percentage",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "merkleProof",
              type: "bytes32[]",
              internalType: "bytes32[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "hasClaimed",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initialize",
          inputs: [
            {
              name: "_token",
              type: "address",
              internalType: "address",
            },
            {
              name: "_tokenCreator",
              type: "address",
              internalType: "address",
            },
            {
              name: "_merkleRoot",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "_totalAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "merkleRoot",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "token",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenCreator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalAirdropAmount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "event",
          name: "AirdropContractInitialized",
          inputs: [
            {
              name: "token",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "createdBy",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "_merkleRoot",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Initialized",
          inputs: [
            {
              name: "version",
              type: "uint64",
              indexed: false,
              internalType: "uint64",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MerkleRootSet",
          inputs: [
            {
              name: "token",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "merkleRoot",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokensClaimed",
          inputs: [
            {
              name: "token",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "recipient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "percentage",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AlreadyClaimed",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidInitialization",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidMerkleProof",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidMerkleRoot",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidParameters",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidPercentage",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidTotalAmount",
          inputs: [],
        },
        {
          type: "error",
          name: "NotInitializing",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "Unauthorized",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "",
      deploymentScript: "deploy.js",
      constructorArgs: [],
      verified: false,
    },
    DiamondHandContract: {
      address: "0xb5CAe94454c99F82f658A8df106D1F3840d70238",
      abi: [
        {
          type: "function",
          name: "calculateReward",
          inputs: [
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initialize",
          inputs: [
            {
              name: "_token",
              type: "address",
              internalType: "address",
            },
            {
              name: "_tokenCreator",
              type: "address",
              internalType: "address",
            },
            {
              name: "_lockDuration",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "lockDuration",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lockTimestamps",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "lockTokens",
          inputs: [
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "lockedAmounts",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "token",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenCreator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "unlockTokens",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Initialized",
          inputs: [
            {
              name: "version",
              type: "uint64",
              indexed: false,
              internalType: "uint64",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokensLocked",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "duration",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokensUnlocked",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "reward",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AmountMustBeGreaterThanZero",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidInitialization",
          inputs: [],
        },
        {
          type: "error",
          name: "NoTokensToUnlock",
          inputs: [],
        },
        {
          type: "error",
          name: "NotInitializing",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "TokensStillLocked",
          inputs: [],
        },
        {
          type: "error",
          name: "TransferFailed",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "",
      deploymentScript: "deploy.js",
      constructorArgs: [],
      verified: false,
    },
    Cult: {
      address: "0xc4b2BAC7DcaD23f91581D55c4a4A993cc913cc82",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_protocolFeeRecipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "_cultRewards",
              type: "address",
              internalType: "address",
            },
            {
              name: "_weth",
              type: "address",
              internalType: "address",
            },
            {
              name: "_nonfungiblePositionManager",
              type: "address",
              internalType: "address",
            },
            {
              name: "_swapRouter",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "MAX_TOTAL_SUPPLY",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "MIN_ORDER_SIZE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ORDER_REFERRER_FEE_BPS",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "PROTOCOL_FEE_BPS",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOKEN_CREATOR_FEE_BPS",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "TOTAL_FEE_BPS",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "WETH",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "allowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "bondingCurve",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract BondingCurve",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "burn",
          inputs: [
            {
              name: "tokensToBurn",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "buy",
          inputs: [
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "refundRecipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "orderReferrer",
              type: "address",
              internalType: "address",
            },
            {
              name: "comment",
              type: "string",
              internalType: "string",
            },
            {
              name: "expectedMarketType",
              type: "uint8",
              internalType: "enum ICult.MarketType",
            },
            {
              name: "minOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sqrtPriceLimitX96",
              type: "uint160",
              internalType: "uint160",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "claimSecondaryRewards",
          inputs: [
            {
              name: "pushEthRewards",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "cultRewards",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "currentExchangeRate",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "decimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getEthBuyQuote",
          inputs: [
            {
              name: "ethOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getEthSellQuote",
          inputs: [
            {
              name: "ethOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenBuyQuote",
          inputs: [
            {
              name: "tokenOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenSellQuote",
          inputs: [
            {
              name: "tokenOrderSize",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initialize",
          inputs: [
            {
              name: "_tokenCreator",
              type: "address",
              internalType: "address",
            },
            {
              name: "_bondingCurve",
              type: "address",
              internalType: "address",
            },
            {
              name: "_tokenURI",
              type: "string",
              internalType: "string",
            },
            {
              name: "_name",
              type: "string",
              internalType: "string",
            },
            {
              name: "_symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "_merkleRoot",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "airdropAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "airdropContract",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "lpTokenId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "marketType",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "enum ICult.MarketType",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "merkleRoot",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "nonfungiblePositionManager",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "onERC721Received",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bytes4",
              internalType: "bytes4",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "poolAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "protocolFeeRecipient",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "sell",
          inputs: [
            {
              name: "tokensToSell",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "recipient",
              type: "address",
              internalType: "address",
            },
            {
              name: "orderReferrer",
              type: "address",
              internalType: "address",
            },
            {
              name: "comment",
              type: "string",
              internalType: "string",
            },
            {
              name: "expectedMarketType",
              type: "uint8",
              internalType: "enum ICult.MarketType",
            },
            {
              name: "minPayoutSize",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "sqrtPriceLimitX96",
              type: "uint160",
              internalType: "uint160",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "state",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct ICult.MarketState",
              components: [
                {
                  name: "marketType",
                  type: "uint8",
                  internalType: "enum ICult.MarketType",
                },
                {
                  name: "marketAddress",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "swapRouter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenCreator",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenURI",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transfer",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "uniswapV3SwapCallback",
          inputs: [
            {
              name: "amount0Delta",
              type: "int256",
              internalType: "int256",
            },
            {
              name: "amount1Delta",
              type: "int256",
              internalType: "int256",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CultMarketGraduated",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "poolAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "totalEthLiquidity",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "totalTokenLiquidity",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "lpPositionId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "marketType",
              type: "uint8",
              indexed: false,
              internalType: "enum ICult.MarketType",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CultTokenBuy",
          inputs: [
            {
              name: "buyer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "recipient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "orderReferrer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "totalEth",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "ethFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "ethSold",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "tokensBought",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "buyerTokenBalance",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "comment",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "totalSupply",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "marketType",
              type: "uint8",
              indexed: false,
              internalType: "enum ICult.MarketType",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CultTokenFees",
          inputs: [
            {
              name: "tokenCreator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "orderReferrer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "protocolFeeRecipient",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "tokenCreatorFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "orderReferrerFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "protocolFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CultTokenSecondaryRewards",
          inputs: [
            {
              name: "rewards",
              type: "tuple",
              indexed: false,
              internalType: "struct ICult.SecondaryRewards",
              components: [
                {
                  name: "totalAmountEth",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalAmountToken",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "creatorAmountEth",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "creatorAmountToken",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "protocolAmountEth",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "protocolAmountToken",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CultTokenSell",
          inputs: [
            {
              name: "seller",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "recipient",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "orderReferrer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "totalEth",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "ethFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "ethBought",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "tokensSold",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "sellerTokenBalance",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "comment",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "totalSupply",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "marketType",
              type: "uint8",
              indexed: false,
              internalType: "enum ICult.MarketType",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "CultTokenTransfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "fromTokenBalance",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "toTokenBalance",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "totalSupply",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Initialized",
          inputs: [
            {
              name: "version",
              type: "uint64",
              indexed: false,
              internalType: "uint64",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AddressZero",
          inputs: [],
        },
        {
          type: "error",
          name: "ERC20InsufficientAllowance",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "allowance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSpender",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "EthAmountTooSmall",
          inputs: [],
        },
        {
          type: "error",
          name: "EthTransferFailed",
          inputs: [],
        },
        {
          type: "error",
          name: "InitialOrderSizeTooLarge",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientFunds",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientLiquidity",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidInitialization",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidMarketType",
          inputs: [],
        },
        {
          type: "error",
          name: "MarketAlreadyGraduated",
          inputs: [],
        },
        {
          type: "error",
          name: "MarketNotGraduated",
          inputs: [],
        },
        {
          type: "error",
          name: "NotInitializing",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyPool",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyWeth",
          inputs: [],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "SlippageBoundsExceeded",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "",
      deploymentScript: "deploy.js",
      constructorArgs: [
        "0x60187Bc4949eE2F01b507a9F77ad615093f44260",
        "0x4A73801ff8946d51c4EEef9a1b7B1CB7320A4c9F",
        "0x261D8c5e9742e6f7f1076Fa1F560894524e19cad",
        "0x50ff23E9A8D5DAc05744C367c9DDd588D027982B",
        "0x201B36B26b816D061fC552B679f8279Db0Fbbc6A",
      ],
      verified: false,
    },
    CultFactory: {
      address: "0xe5Ba5B6B2162edBe485e3a5F83Db8Cd5e26f53af",
      abi: [
        {
          type: "constructor",
          inputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "BASIS_POINTS",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "UPGRADE_INTERFACE_VERSION",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "airdropImplementation",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "bondingCurve",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "deploy",
          inputs: [
            {
              name: "_tokenCreator",
              type: "address",
              internalType: "address",
            },
            {
              name: "_tokenURI",
              type: "string",
              internalType: "string",
            },
            {
              name: "_name",
              type: "string",
              internalType: "string",
            },
            {
              name: "_symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "merkleRoot",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "airdropPercent",
              type: "uint16",
              internalType: "uint16",
            },
            {
              name: "diamondHandDuration",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "diamondHandImplementation",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "implementation",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "initialize",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "_tokenImplementation",
              type: "address",
              internalType: "address",
            },
            {
              name: "_bondingCurve",
              type: "address",
              internalType: "address",
            },
            {
              name: "_airdropImplementation",
              type: "address",
              internalType: "address",
            },
            {
              name: "_diamondHandImplementation",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "proxiableUUID",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "tokenCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tokenImplementation",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "upgradeToAndCall",
          inputs: [
            {
              name: "newImplementation",
              type: "address",
              internalType: "address",
            },
            {
              name: "data",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "event",
          name: "CultTokenCreated",
          inputs: [
            {
              name: "factoryAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "tokenCreator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "protocolFeeRecipient",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "bondingCurve",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "tokenURI",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "name",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "tokenAddress",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "poolAddress",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "airdropContract",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "diamondHandContract",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Initialized",
          inputs: [
            {
              name: "version",
              type: "uint64",
              indexed: false,
              internalType: "uint64",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Upgraded",
          inputs: [
            {
              name: "implementation",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "AddressEmptyCode",
          inputs: [
            {
              name: "target",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1967InvalidImplementation",
          inputs: [
            {
              name: "implementation",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC1967NonPayable",
          inputs: [],
        },
        {
          type: "error",
          name: "FailedCall",
          inputs: [],
        },
        {
          type: "error",
          name: "FailedDeployment",
          inputs: [],
        },
        {
          type: "error",
          name: "InsufficientBalance",
          inputs: [
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidAirdropPercentage",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidInitialization",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidMerkleRoot",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidParameters",
          inputs: [],
        },
        {
          type: "error",
          name: "NotInitializing",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "UUPSUnauthorizedCallContext",
          inputs: [],
        },
        {
          type: "error",
          name: "UUPSUnsupportedProxiableUUID",
          inputs: [
            {
              name: "slot",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "",
      deploymentScript: "deploy.js",
      constructorArgs: [],
      verified: false,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
